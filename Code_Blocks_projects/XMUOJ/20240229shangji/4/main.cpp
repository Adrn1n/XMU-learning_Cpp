/*
弹幕游戏
描述

在弹幕射击游戏中，玩家或子弹可以抽象为二维平面直角坐标系中的圆

当代表玩家的圆与任意一个代表子弹的圆相交，玩家被判断为中弹

因为游戏的作者不太友好，子弹可能会直接糊到玩家脸上，子弹与玩家互相包含或重合也视为中弹

给出当前游戏画面中代表玩家和子弹的圆的位置和大小，请判断玩家是否中弹


输入
输入第一行为一个整数n(1≤n≤100) ，代表圆的数量

之后的n 行， 每行三个由空格隔开的实数x，y，r(0≤∣x∣,∣y∣≤1000,1≤r≤1000)，表示圆的坐标和半径

其中输入的实数最多包含3 位小数，保证不会出现两圆相切的情况

最后一行为一个整数p(0≤p≤n−1)，表示第p+1 个圆为玩家，其他圆为子弹


输出
输出一行字符串，代表判断结果

如果玩家中弹输出"Biu"，如果玩家未中弹输出"Alive"（均不包含引号）


输入样例 1

3
0.000 0.000 2.000
1.000 1.000 2.000
-9.500 9.000 3.000
0
输出样例 1

Biu
*/

#include <iostream>

using namespace std;

int main()
{
    short N=0;
    cin>>N;
    double A[3][N];
    for(double *p=A[0]; p-A[0]<N; p++)
        cin>>*p>>*(p+N)>>*(p+2*N);
    short n=0;
    cin>>n;
    bool flag=1;
    for(double *p=A[0]; p-A[0]<N; p++)
    {
        if(p-A[0]==n)
            continue;
        else
        {
            if((*p-A[0][n])*(*p-A[0][n])+(*(p+N)-A[1][n])*(*(p+N)-A[1][n])<(*(p+2*N)+A[2][n])*(*(p+2*N)+A[2][n]))
            {
                cout<<"Biu"<<endl,flag=0;
                break;
            }
        }
    }
    if(flag)
        cout<<"Alive"<<endl;
    return 0;
}
